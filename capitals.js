// Find the capitals
// 'CodEWaRs' => [0, 3, 4, 6]

export const capitals = word => [...word].map((el,i)=>(el===el.toUpperCase())?i:'хуй').filter(el=>el!=='хуй')

// ...word - вываливает буквы из строки в "неопределённость", буквы такие: "Куда мы попали?"
// [...word] - из "неопределённости" сваливаем в массив, они там по отдельности как курочки по насестам
//  ^^^^^^^ данная конструкция называется "спред оператором"
// [...word].map - MAP как for бежит по каждому элементу массивава
// всю свою непродолжительную жизнь он мечтает вернуть новый массив
// .map((e,i) - el - сюда попадёт каждый элемент массива по отдельности в каждой итерации(риэркарнации), i - его индекс("C"-0, "o"-1, "d"-2 и тд)
// всё что после => - это безобразие, которая будет выполняться для каждого элемента массива(el)
// el === el.toLowerCase() - в левой руке у нас элемент массива, в правой - его версия в верхнем регистре
// если после преобразования el.toLowerCase() буква не поменялась "C" === "C" это превратится в true
// тут нас встречает тернарник, аналог if else, если true - то возвращается i, если false - то undefined 
// true ? "сработает это" : "не сработает"
// false ? "не сработает" : "сработает это"
// в нашем случае с буквой "C" i=0, вернётся i, который равен 0 и этот ноль залетит в новый массив о котором мечтает MAP
// всё это происходит для каждого элемента массива
// в случае если буква не была в верхнем регистре, то будет undefined и в новый массив залетит undefined
// в результате мы получаем массив с индексами букв в верхнем регистре и ундефаями там где буквы были маленькими
// примерно так [ 0, undefined, undefined, 3, 4,undefined, 6, undefined]
// и теперь безпалива вытресаем из масиива все undefined
// .filter(e=>e!==undefined) - filter мечтает вернуть новый массив, в который положит только те значения которые не равны undefined
// в результате мы получаем массив с индексами букв в верхнем регистре
// всем спасибо
// [0, 3, 4, 6]
